[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sitv"
version = "0.14.0"
description = "Modular loss landscape explorer for neural network task vectors"
requires-python = ">=3.12"
dependencies = [
    "torch>=2.8.0",
    "transformers>=4.57.1",
    "numpy>=2.3.4",
    "matplotlib>=3.10.7",
    "accelerate>=1.2.0",
    "pyyaml>=6.0",
    "scipy>=1.11.0",  # For gradient analysis (gaussian smoothing)
]

[project.optional-dependencies]
dev = [
    "ruff>=0.14.2",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "types-PyYAML>=6.0",  # Type stubs for yaml module
]
bayesian = [
    "scikit-learn>=1.0",  # For Bayesian optimization sampler
]

[tool.hatch.build.targets.wheel]
packages = ["sitv"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
# Workaround for scipy linking issues on macOS with conda
# Run tests with: DYLD_LIBRARY_PATH=/Users/casey/anaconda3/lib:$DYLD_LIBRARY_PATH pytest
env = [
    "DYLD_LIBRARY_PATH=/Users/casey/anaconda3/lib:${DYLD_LIBRARY_PATH}"
]
